# 保守优化配置
# 适用于: 4核3GHz + 7.5GB内存的专用小智ESP32服务器
# 优化目标: 支持10-12台设备稳定并发，保守资源预留策略

version: '3.8'
services:
  # 主服务 - 激进优化版本
  xiaozhi-esp32-server:
    image: ghcr.nju.edu.cn/xinnan-tech/xiaozhi-esp32-server:server_latest
    container_name: xiaozhi-esp32-server
    depends_on:
      - xiaozhi-esp32-server-db
      - xiaozhi-esp32-server-redis
    restart: always
    networks:
      - default
    ports:
      - "8000:8000"
      - "8003:8003"
    security_opt:
      - seccomp:unconfined
    environment:
      - TZ=Asia/Shanghai
      # UTF-8编码设置，防止ASCII编码错误
      - LANG=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
      - PYTHONIOENCODING=utf-8
      - PYTHONUTF8=1
      # Python性能优化
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      # CPU线程控制 - 专用服务器可以更激进
      - OMP_NUM_THREADS=3
      - MKL_NUM_THREADS=3
      - NUMBA_NUM_THREADS=3
      # 内存优化
      - MALLOC_ARENA_MAX=2
      - MALLOC_MMAP_THRESHOLD_=131072
      # SenseVoice专用优化
      - SENSEVOICE_MODEL_CACHE=1
      - SENSEVOICE_PRELOAD=1
    volumes:
      - ./data:/opt/xiaozhi-esp32-server/data
      - ./models/SenseVoiceSmall/model.pt:/opt/xiaozhi-esp32-server/models/SenseVoiceSmall/model.pt
      # 大容量共享内存 - 专用服务器可以分配更多
      - /dev/shm:/dev/shm
      # 绑定tmpfs到内存，加速临时文件操作
      - type: tmpfs
        target: /tmp
        tmpfs:
          size: 1G
    # 保守优化的资源配置 - 为ASR服务预留充足资源
    deploy:
      resources:
        limits:
          # 限制CPU使用到2.5核，预留37.5%的CPU资源
          cpus: '2.5'
          # 限制内存到4GB，预留50%的内存资源
          memory: 4G
        reservations:
          # 保证1.5核基础性能
          cpus: '1.5'
          # 保证2GB基础内存
          memory: 2G
    # 专用服务器优化配置
    shm_size: 2g
    # CPU亲和性 - 绑定到前3个核心
    cpuset: "0-2"
    # 内存策略 - 禁用swap，提升性能
    mem_swappiness: 10
    # 文件描述符限制
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        soft: -1
        hard: -1
      nproc:
        soft: 32768
        hard: 32768
    # 网络优化通过系统级配置实现，移除容器级sysctls

  # Web管理界面 - 轻量化配置
  xiaozhi-esp32-server-web:
    image: ghcr.nju.edu.cn/xinnan-tech/xiaozhi-esp32-server:web_latest
    container_name: xiaozhi-esp32-server-web
    restart: always
    networks:
      - default
    depends_on:
      xiaozhi-esp32-server-db:
        condition: service_healthy
      xiaozhi-esp32-server-redis:
        condition: service_healthy
    ports:
      - "8002:8002"
    environment:
      - TZ=Asia/Shanghai
      - SPRING_DATASOURCE_DRUID_URL=jdbc:mysql://xiaozhi-esp32-server-db:3306/xiaozhi_esp32_server?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&nullCatalogMeansCurrent=true&connectTimeout=30000&socketTimeout=30000&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
      - SPRING_DATASOURCE_DRUID_USERNAME=root
      - SPRING_DATASOURCE_DRUID_PASSWORD=123456
      - SPRING_DATA_REDIS_HOST=xiaozhi-esp32-server-redis
      - SPRING_DATA_REDIS_PASSWORD=
      - SPRING_DATA_REDIS_PORT=6379
      # JVM优化
      - JAVA_OPTS=-Xms256m -Xmx512m -XX:+UseG1GC -XX:MaxGCPauseMillis=200
    volumes:
      - ./uploadfile:/uploadfile
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 768M
        reservations:
          cpus: '0.2'
          memory: 256M
    # 绑定到第4个核心，避免与主服务竞争
    cpuset: "3"

  # 数据库 - P0优化配置（内存使用率从95%降至75%）
  xiaozhi-esp32-server-db:
    image: mysql:8.0
    container_name: xiaozhi-esp32-server-db
    command: >
      --default-authentication-plugin=mysql_native_password
      --innodb-buffer-pool-size=180M
      --innodb-log-file-size=64M
      --innodb-flush-log-at-trx-commit=2
      --innodb-flush-method=O_DIRECT
      --max-connections=40
      --max-user-connections=35
      --tmp-table-size=16M
      --max-heap-table-size=16M
      --query-cache-type=1
      --query-cache-size=24M
      --query-cache-limit=2M
      --sort-buffer-size=1M
      --join-buffer-size=1M
      --thread-cache-size=16
      --table-open-cache=400
      --wait-timeout=300
      --interactive-timeout=300
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    networks:
      - default
    expose:
      - 3306
    volumes:
      - ./mysql/data:/var/lib/mysql
      # 使用tmpfs加速临时表操作
      - type: tmpfs
        target: /tmp
        tmpfs:
          size: 128M
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=xiaozhi_esp32_server
      - MYSQL_INITDB_ARGS="--character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M
    # 绑定到第4个核心
    cpuset: "3"

  # Redis - 高性能配置
  xiaozhi-esp32-server-redis:
    image: redis:7-alpine
    container_name: xiaozhi-esp32-server-redis
    command: >
      redis-server
      --maxmemory 128mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
      --tcp-keepalive 60
      --tcp-backlog 511
      --timeout 0
    expose:
      - 6379
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - default
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    # 绑定到第4个核心
    cpuset: "3"

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1500
    ipam:
      config:
        - subnet: 172.20.0.0/16